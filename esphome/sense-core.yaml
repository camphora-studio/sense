# sense-core.yaml
# Main firmware for the Camphora Sense Air Quality Monitor
# Handles button logic, sensor state management, and I2C/ESP-NOW.

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: esp-idf

packages:
  # Import all espnow communication-related logic from the separate file
  comms: !include sense-espnow.yaml

# Added I2C bus definition for the sensors
i2c:
  sda: GPIO18
  scl: GPIO19
  scan: true # Set to true for debugging. Will show all found I2C addresses on boot.

globals:
  # These variables hold the current air quality state.
  - id: current_voc_index
    type: int
    initial_value: '100' # Default good air quality
  - id: current_nox_index
    type: int
    initial_value: '10'  # Default good air quality

interval:
  - interval: 10s
    then:
      - script.execute: broadcast_data

sensor:
  # Add the SEN5x sensor platform
  - platform: sen5x
    id: sen5x_sensor
    # Per spec 2.2.3, store the algorithm state
    store_baseline: true 
    update_interval: 10s # Match the broadcast interval
    
    # --- Core Sensors for Broadcast Logic ---
    voc:
      name: VOC
      # When the sensor gets a new value, update the global variable
      on_value:
        - lambda: 'id(current_voc_index) = x;'
    nox:
      name: NOx
      # When the sensor gets a new value, update the global variable
      on_value:
        - lambda: 'id(current_nox_index) = x;'

    # --- Optional Sensors for Logging/Debugging ---
    pm_1_0:
      name: PM <1µm Weight concentration
    pm_2_5:
      name: PM <2.5µm Weight concentration
    pm_4_0:
      name: PM <4µm Weight concentration
    pm_10_0:
      name: PM <10µm Weight concentration
    temperature:
      name: Temperature
    humidity:
      name: Humidity

  - platform: scd4x
    id: scd4x_sensor # ID for the calibration service
    co2:
      name: "CO2"
    temperature:
      name: "SCD4x Temperature"
    humidity:
      name: "SCD4x Humidity"
    # Per your spec 2.2.1, ASC is enabled (this is the default)
    automatic_self_calibration: true 
    # Match the SEN5x update interval for consistency
    update_interval: 10s

binary_sensor:
  # These buttons now act as a manual override for testing.
  # The sensor will overwrite these values on its next 10-second update.
  
  # Upper Button (GPIO9) - Simulates Level 1 (Low Concern)
  - platform: gpio
    pin:
      number: GPIO9
      mode: INPUT_PULLUP
      inverted: true
    name: "Set L1 AQI (Manual)"
    on_press:
      - logger.log: "Button A pressed. Manually setting AQI to Level 1."
      # Step 1: Update the global state variables.
      - lambda: |-
          id(current_voc_index) = 150;
          id(current_nox_index) = 20;
      # Step 2: Call the script to broadcast the new state immediately.
      - script.execute: broadcast_data

  # Middle Button (GPIO0) - Simulates Good Air Quality 
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    name: "Set baseline AQI (Manual)"
    on_press:
      - logger.log: "Button B pressed. Manually setting AQI to baseline."
      - lambda: |-
          id(current_voc_index) = 100;
          id(current_nox_index) = 10;
      - script.execute: broadcast_data

  # Lower Button (GPIO1) - Handles Pairing and Reset
  - platform: gpio
    pin:
      number: GPIO1
      mode: INPUT_PULLUP
      inverted: true
    name: "PAIR/RESET Button"
    on_press:
      - script.execute: factory_reset_timer
    on_release:
      - script.stop: factory_reset_timer
    on_click:
      max_length: 2s
      then:
        - logger.log: "Short press detected. Starting pairing broadcast..."
        # This script is defined in the sense-espnow package.
        - script.execute: broadcast_pairing_request

script: 
  - id: factory_reset_timer
    mode: restart
    then:
      - delay: 10s # a 10 second hold triggers a reset
      - logger.log: "HOLD DETECTED: Factory reset initiated."
      - script.execute: factory_reset

  - id: factory_reset
    mode: single
    then:
      - logger.log: "CORE: Factory reset complete. (No actions defined yet)."
      # Future: Add 'sen5x.reset_baseline' or clear flash.